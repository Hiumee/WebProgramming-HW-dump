{"version":3,"sources":["./src/app/domain/article/article-list/article-list.component.html","./src/app/domain/article/article-list/article-list.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/service/article.service.ts","./src/app/app.module.ts","./src/app/domain/article/article.component.html","./src/app/domain/article/article.component.ts","./src/app/app-routing.module.ts","./src/app/domain/article/add-article/add-article.component.ts","./src/app/domain/article/add-article/add-article.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<a href=\"login.html\">Log in</a>\n<a href=\"register.html\">Register</a>\n<br>\n<select [(ngModel)]=\"selectedCategory\">\n  <option *ngFor=\"let category of categories\" value=\"{{category}}\">{{category}}</option>\n</select>\n<button (click)=\"getArticles({filter: 'category', category: selectedCategory})\">Filter by category</button>\n<br>\n<input [(ngModel)]=\"startDate\" type=\"date\">\n<input [(ngModel)]=\"endDate\" type=\"date\">\n<button (click)=\"getArticles({filter: 'date', startDate: startDate, endDate: endDate})\">Filter by date</button>\n<br>\n\n<span>{{lastFilter}}</span>\n\n<div *ngFor=\"let article of articles\">\n  <app-article [article]=\"article\"></app-article>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Article} from '../../article';\nimport {ArticleService} from '../../../service/article.service';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-article-list',\n  templateUrl: './article-list.component.html',\n  styleUrls: ['./article-list.component.css']\n})\nexport class ArticleListComponent implements OnInit {\n\n  articles: Article[];\n  categories: string[];\n  selectedCategory: string;\n  startDate: string;\n  endDate: string;\n  lastFilter = 'Not filtered yet';\n  nextFilter = 'Not filtered yet';\n\n  constructor(private articleService: ArticleService, private http: HttpClient) {\n    this.articles = [];\n  }\n\n  ngOnInit(): void {\n    this.getArticles({});\n    this.getCategories();\n  }\n\n  getArticles(data): void {\n    this.lastFilter = this.nextFilter;\n\n    if (data.filter) {\n      if (data.filter === 'category') {\n        this.nextFilter = `Last filtered by category: ${data.category}`;\n      }\n      if (data.filter === 'date') {\n        this.nextFilter = `Last filtered by date: ${data.startDate} - ${data.endDate}`;\n      }\n    }\n    this.articleService.getArticles(data).subscribe(articles => this.articles = articles);\n  }\n\n  private getCategories(): void {\n    this.http.get<string[]>('categories.php').subscribe(categories => this.categories = categories);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lab8';\n}\n","<nav>\n  <a routerLink=\"/\">Home</a>\n  <a routerLink=\"/add\">Add</a>\n</nav>\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Article} from '../domain/article';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  constructor(private http: HttpClient) { }\n\n  getArticles(data: any): Observable<Article[]> {\n    return this.http.post<Article[]>('get_news.php', data);\n  }\n\n  updateArticle(article: Article): Observable<Article> {\n    return this.http.post<Article>('update.php', article);\n  }\n\n  addArticle(article: Article): Observable<boolean> {\n    return this.http.post<boolean>('add.php', article);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ArticleComponent } from './domain/article/article.component';\nimport { ArticleListComponent } from './domain/article/article-list/article-list.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AddArticleComponent } from './domain/article/add-article/add-article.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ArticleComponent,\n    ArticleListComponent,\n    AddArticleComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div *ngIf=\"article && !editMode\" style=\"border:1px solid black;\">\n  <h2>{{article.title}}</h2>\n  <h3>{{article.author}}</h3>\n  <h5>{{article.category}} {{article.date}}</h5>\n  {{article.content}}\n  <button (click)=\"this.editMode=true\">Edit</button>\n</div>\n<div *ngIf=\"article && editMode\" style=\"border:1px solid black;\">\n  <h2><input type=\"text\" [(ngModel)]=\"article.title\"></h2>\n  <h3>{{article.author}}</h3>\n  <h5><input type=\"text\" [(ngModel)]=\"article.category\"> <input type=\"date\" [(ngModel)]=\"article.date\"></h5>\n  <input type=\"text\" [(ngModel)]=\"article.content\">\n  <button (click)=\"update()\">Update</button>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Article} from '../article';\nimport {ArticleService} from '../../service/article.service';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css']\n})\nexport class ArticleComponent implements OnInit {\n\n  editMode = false;\n  @Input() article: Article;\n\n  constructor(private articleService: ArticleService) { }\n\n  ngOnInit(): void {\n  }\n\n  update(): void {\n    this.articleService.updateArticle(this.article).subscribe(article => {this.article = article; this.editMode = false; });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ArticleListComponent} from './domain/article/article-list/article-list.component';\nimport {AddArticleComponent} from './domain/article/add-article/add-article.component';\n\nconst routes: Routes = [\n  { path: '', component: ArticleListComponent },\n  { path: 'add', component: AddArticleComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Article} from '../../article';\nimport {ArticleService} from '../../../service/article.service';\nimport {Route, Router, RouterModule} from '@angular/router';\n\n@Component({\n  selector: 'app-add-article',\n  templateUrl: './add-article.component.html',\n  styleUrls: ['./add-article.component.css']\n})\nexport class AddArticleComponent implements OnInit {\n\n  article: Article;\n  message = '';\n\n  constructor(private articleService: ArticleService, private route: Router) {\n    this.article = {title: 'Title', category: 'Category', content: 'Content', date: '2000-0-0', id: 0, author: ''};\n  }\n\n  ngOnInit(): void {\n  }\n\n  addArticle(): void {\n    this.articleService.addArticle(this.article).subscribe(success => {\n      if (success === true) {\n        this.message = 'Added successfully';\n      }\n      else {\n        this.message = 'An error occurred';\n      }\n    });\n  }\n}\n","<h2>Add a new article</h2>\n\n<div>\n  <label>Title</label>\n  <input type=\"text\" [(ngModel)]=\"article.title\">\n  <br>\n  <label>Category</label>\n  <input type=\"text\" [(ngModel)]=\"article.category\">\n  <br>\n  <label>Content</label>\n  <input type=\"text\" [(ngModel)]=\"article.content\">\n  <br>\n  <label>Date</label>\n  <input type=\"date\" [(ngModel)]=\"article.date\">\n  <br>\n  <button (click)=\"addArticle()\">Add article</button>\n</div>\n{{message}}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}